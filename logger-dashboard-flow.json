[
  {
    "id": "logger-dashboard",
    "type": "tab",
    "label": "Logger Dashboard",
    "disabled": false,
    "info": ""
  },
  {
    "id": "ui_group_settings",
    "type": "ui_group",
    "name": "Logger Settings",
    "tab": "ui_tab_logger",
    "order": 1,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "ui_group_monitor",
    "type": "ui_group",
    "name": "Logger Monitor",
    "tab": "ui_tab_logger",
    "order": 2,
    "disp": true,
    "width": "12",
    "collapse": false
  },
  {
    "id": "ui_tab_logger",
    "type": "ui_tab",
    "name": "Logger Control",
    "icon": "dashboard",
    "order": 1
  },
  {
    "id": "filePath_input",
    "type": "ui_text_input",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "File Path",
    "label": "JSON File Path",
    "mode": "text",
    "delay": "0",
    "x": 180,
    "y": 80,
    "wires": [["set-settings"]]
  },
  {
    "id": "mongoUrl_input",
    "type": "ui_text_input",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "MongoDB URL",
    "label": "MongoDB URL",
    "mode": "text",
    "delay": "0",
    "x": 180,
    "y": 120,
    "wires": [["set-settings"]]
  },
  {
    "id": "httpEndpoint_input",
    "type": "ui_text_input",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "HTTP Endpoint",
    "label": "HTTP Endpoint",
    "mode": "text",
    "delay": "0",
    "x": 180,
    "y": 160,
    "wires": [["set-settings"]]
  },
  {
    "id": "filterExpression_input",
    "type": "ui_text_input",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "Filter Expression",
    "label": "Filter Expression",
    "mode": "text",
    "delay": "0",
    "x": 180,
    "y": 200,
    "wires": [["set-settings"]]
  },
  {
    "id": "fieldsToLog_input",
    "type": "ui_text_input",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "Fields to Log",
    "label": "Fields to Log (comma-separated)",
    "mode": "text",
    "delay": "0",
    "x": 180,
    "y": 240,
    "wires": [["set-settings"]]
  },
  {
    "id": "logLevel_dropdown",
    "type": "ui_dropdown",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "Log Level",
    "label": "Log Level",
    "options": [
      {"label": "debug", "value": "debug"},
      {"label": "info", "value": "info"},
      {"label": "warn", "value": "warn"},
      {"label": "error", "value": "error"}
    ],
    "x": 180,
    "y": 280,
    "wires": [["set-settings"]]
  },
  {
    "id": "retention_input",
    "type": "ui_text_input",
    "z": "logger-dashboard",
    "group": "ui_group_settings",
    "name": "Retention Days",
    "label": "Auto-delete logs older than (days)",
    "mode": "number",
    "delay": "0",
    "x": 180,
    "y": 320,
    "wires": [["set-retention"]]
  },
  {
    "id": "set-settings",
    "type": "function",
    "z": "logger-dashboard",
    "name": "Set Logger Settings",
    "func": "const settings = global.get(\"loggerSettings\") || {};\nsettings.filePath = msg.filePath || settings.filePath;\nsettings.mongoUrl = msg.mongoUrl || settings.mongoUrl;\nsettings.httpEndpoint = msg.httpEndpoint || settings.httpEndpoint;\nsettings.filterExpression = msg.filterExpression || settings.filterExpression;\nsettings.fieldsToLog = msg.fieldsToLog || settings.fieldsToLog;\nsettings.logLevel = msg.payload || settings.logLevel;\nglobal.set(\"loggerSettings\", settings);\nreturn null;",
    "outputs": 0,
    "x": 450,
    "y": 180,
    "wires": []
  },
  {
    "id": "set-retention",
    "type": "function",
    "z": "logger-dashboard",
    "name": "Set Retention",
    "func": "const days = parseInt(msg.payload);\nif (!isNaN(days)) flow.set(\"logRetentionDays\", days);\nreturn null;",
    "outputs": 0,
    "x": 450,
    "y": 320,
    "wires": []
  },
  {
    "id": "log-count",
    "type": "ui_text",
    "z": "logger-dashboard",
    "group": "ui_group_monitor",
    "name": "Log Count",
    "label": "Log Entries",
    "format": "{{msg.payload}}",
    "x": 160,
    "y": 420,
    "wires": []
  },
  {
    "id": "last-log",
    "type": "ui_text",
    "z": "logger-dashboard",
    "group": "ui_group_monitor",
    "name": "Last Log At",
    "label": "Last Log Timestamp",
    "format": "{{msg.payload}}",
    "x": 160,
    "y": 460,
    "wires": []
  },
  {
    "id": "chart-log-activity",
    "type": "ui_chart",
    "z": "logger-dashboard",
    "name": "Log Activity",
    "group": "ui_group_monitor",
    "order": 3,
    "width": 0,
    "height": 0,
    "label": "Log Activity",
    "chartType": "line",
    "legend": "false",
    "xformat": "HH:mm:ss",
    "interpolate": "linear",
    "nodata": "No logs",
    "ymin": "0",
    "ymax": "",
    "x": 400,
    "y": 440,
    "wires": [[]]
  },
  {
    "id": "inject-status",
    "type": "inject",
    "z": "logger-dashboard",
    "name": "Status Update",
    "repeat": "10",
    "once": true,
    "onceDelay": "5",
    "x": 160,
    "y": 380,
    "wires": [["status-fetch"]]
  },
  {
    "id": "status-fetch",
    "type": "function",
    "z": "logger-dashboard",
    "name": "Fetch Status",
    "func": "const logCount = flow.get(\"logCount\") || 0;\nconst lastLog = flow.get(\"lastLogAt\") || \"-\";\nnode.send([{ payload: logCount }, { payload: lastLog }, { payload: logCount }]);",
    "outputs": 3,
    "x": 320,
    "y": 380,
    "wires": [["log-count"], ["last-log"], ["chart-log-activity"]]
  }
]
